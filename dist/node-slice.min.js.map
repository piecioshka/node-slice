{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///node-slice.min.js","webpack:///webpack/bootstrap 97792b8849ee79748849?63c4","webpack:///./index.js?52ff","webpack:///./lib/index.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","assert","condition","message","Error","trim","source","replace","slice","length","isForce","lastSpaceIndex","text","lastIndexOf"],"mappings":"CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,IACA,kBAAAG,gBAAAC,IACAD,UAAAH,GACA,gBAAAC,SACAA,QAAA,MAAAD,IAEAD,EAAA,MAAAC,KACCK,KAAA,WACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAP,OAGA,IAAAC,GAAAO,EAAAD,IACAP,WACAS,GAAAF,EACAG,QAAA,EAUA,OANAL,GAAAE,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAS,QAAA,EAGAT,EAAAD,QAvBA,GAAAQ,KAqCA,OATAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,GAGAR,EAAA,KDgBM,SAASL,EAAQD,EAASM,GEtDhC,YAEAL,GAAAD,QAAAM,EAAA,IF6DM,SAASL,EAAQD;;;;;;;;;;AGpDvB,YAQA,SAAAe,GAAAC,EAAAC,GACA,IAAAD,EACA,SAAAE,OAAAD,GAUA,QAAAE,GAAAC,GACA,MAAAA,GAAAC,QAAA,iBAWA,QAAAC,GAAAF,EAAAG,EAAAC,GACAT,EAAA,gBAAAK,GAAA,0BACAL,EAAA,gBAAAQ,GAAA,yBAEA,IAAAE,EAGA,IAAAL,EAAAG,SACA,MAAAH,EAIA,IAAAM,GAAAN,EAAAE,MAAA,EAAAC,EAGA,aAAAH,EAAAG,IAAA,MAAAG,EAAAH,EAAA,GACAJ,EAAAO,GAAA,MAGAF,IACAC,EAAAC,EAAAC,YAAA,KAEAF,QAKAC,EAAA,MAJAA,EAAAJ,MAAA,EAAAG,GAAA,MAOAxB,EAAAD,QAAAsB","file":"node-slice.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Slice\"] = factory();\n\telse\n\t\troot[\"Slice\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Slice\"] = factory();\n\telse\n\t\troot[\"Slice\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t/**\n\t * @author Piotr Kowalski <piecioshka@gmail.com> (http://piecioshka.pl/)\n\t * @name node-slice\n\t * @description Short version of your strings!\n\t * @version 1.1.1\n\t * @license MIT\n\t * @example\n\t * var slice = require('node-slices');\n\t * slice('the best cookie in the world', 9); // => \"the best...\"\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Verify condition, and throw an error on failure.\n\t *\n\t * @param {boolean} condition\n\t * @param {string} message\n\t */\n\tfunction assert(condition, message) {\n\t    if (!condition) {\n\t        throw new Error(message);\n\t    }\n\t}\n\t\n\t/**\n\t * Remove white spaces on the beginning & at the end.\n\t *\n\t * @param {string} source\n\t * @returns {XML|string|void}\n\t */\n\tfunction trim(source) {\n\t    return source.replace(/^\\s+|\\s+$/g, '');\n\t}\n\t\n\t/**\n\t * Cut passed string and put 3 dots (...) instead of replace chars.\n\t *\n\t * @param {string} source\n\t * @param {number} length\n\t * @param {boolean} [isForce]\n\t * @returns {string}\n\t */\n\tfunction slice(source, length, isForce) {\n\t    assert(typeof source === 'string', 'source is not a string');\n\t    assert(typeof length === 'number', 'length is not a number');\n\t\n\t    var lastSpaceIndex;\n\t\n\t    // When source is longer than limit, return it\n\t    if (source.length < length) {\n\t        return source;\n\t    }\n\t\n\t    // Slice source text using second param\n\t    var text = source.slice(0, length);\n\t\n\t    // If we don't cut in the middle of word, add ellipsis\n\t    if (source[length] === ' ' || text[length - 1] === ' ') {\n\t        return trim(text) + '...';\n\t    }\n\t\n\t    if (!isForce) {\n\t        lastSpaceIndex = text.lastIndexOf(' ');\n\t\n\t        if (lastSpaceIndex !== -1) {\n\t            return text.slice(0, lastSpaceIndex) + '...';\n\t        }\n\t    }\n\t\n\t    return text + '...';\n\t}\n\t\n\tmodule.exports = slice;\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** node-slice.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 97792b8849ee79748849\n **/","'use strict';\n\nmodule.exports = require('./lib/index');\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/string-replace-loader?{\"multiple\":[{\"search\":\"$AUTHOR$\",\"replace\":\"Piotr Kowalski <piecioshka@gmail.com> (http:/piecioshka.pl/)\"},{\"search\":\"$NAME$\",\"replace\":\"node-slice\"},{\"search\":\"$DESCRIPTION$\",\"replace\":\"Short version of your strings!\"},{\"search\":\"$VERSION$\",\"replace\":\"1.1.1\"},{\"search\":\"$LICENSE$\",\"replace\":\"MIT\"}]}!./index.js\n **/","/**\n * @author Piotr Kowalski <piecioshka@gmail.com> (http://piecioshka.pl/)\n * @name node-slice\n * @description Short version of your strings!\n * @version 1.1.1\n * @license MIT\n * @example\n * var slice = require('node-slices');\n * slice('the best cookie in the world', 9); // => \"the best...\"\n */\n\n'use strict';\n\n/**\n * Verify condition, and throw an error on failure.\n *\n * @param {boolean} condition\n * @param {string} message\n */\nfunction assert(condition, message) {\n    if (!condition) {\n        throw new Error(message);\n    }\n}\n\n/**\n * Remove white spaces on the beginning & at the end.\n *\n * @param {string} source\n * @returns {XML|string|void}\n */\nfunction trim(source) {\n    return source.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Cut passed string and put 3 dots (...) instead of replace chars.\n *\n * @param {string} source\n * @param {number} length\n * @param {boolean} [isForce]\n * @returns {string}\n */\nfunction slice(source, length, isForce) {\n    assert(typeof source === 'string', 'source is not a string');\n    assert(typeof length === 'number', 'length is not a number');\n\n    var lastSpaceIndex;\n\n    // When source is longer than limit, return it\n    if (source.length < length) {\n        return source;\n    }\n\n    // Slice source text using second param\n    var text = source.slice(0, length);\n\n    // If we don't cut in the middle of word, add ellipsis\n    if (source[length] === ' ' || text[length - 1] === ' ') {\n        return trim(text) + '...';\n    }\n\n    if (!isForce) {\n        lastSpaceIndex = text.lastIndexOf(' ');\n\n        if (lastSpaceIndex !== -1) {\n            return text.slice(0, lastSpaceIndex) + '...';\n        }\n    }\n\n    return text + '...';\n}\n\nmodule.exports = slice;\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/string-replace-loader?{\"multiple\":[{\"search\":\"$AUTHOR$\",\"replace\":\"Piotr Kowalski <piecioshka@gmail.com> (http:/piecioshka.pl/)\"},{\"search\":\"$NAME$\",\"replace\":\"node-slice\"},{\"search\":\"$DESCRIPTION$\",\"replace\":\"Short version of your strings!\"},{\"search\":\"$VERSION$\",\"replace\":\"1.1.1\"},{\"search\":\"$LICENSE$\",\"replace\":\"MIT\"}]}!./lib/index.js\n **/"],"sourceRoot":""}